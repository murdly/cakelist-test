apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion versions.compileSdk
    defaultConfig {
        applicationId "com.akarbowy.cakelisttest"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.core:core-ktx:$versions.core"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"

    implementation "android.arch.lifecycle:extensions:$versions.lifecycle"

    implementation "com.google.dagger:dagger:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"

    implementation "io.reactivex.rxjava2:rxjava:$versions.rxJava"
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid"
    implementation "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin"

    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$versions.rxJavaAdapter"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    implementation "com.squareup.moshi:moshi-kotlin:$versions.moshi"

    implementation "com.jakewharton.timber:timber:$versions.timber"

    testImplementation "junit:junit:$versions.jUnit"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito_kotlin"
    testImplementation "android.arch.core:core-testing:$versions.lifecycle"
}
